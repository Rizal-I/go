name: Build, Test, Push to Docker Hub, and Deploy to GKE

on:
  push:
    paths:
      - 'go/**'

defaults:
  run:
    working-directory: go

jobs:
  # build-test:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Setup Go
  #       uses: actions/setup-go@v4
  #       with:
  #         go-version: '1.19.x'
  #     - name: Install dependencies
  #       run: go get .
  #     - name: Build
  #       run: go build -v ./...
  #     - name: Test with the Go CLI
  #       run: go test

  # build-push:
  #   needs: build-test
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #         password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  #     - name: Build and Push Docker Image
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: go
  #         push: true
  #         tags: ${{ secrets.DOCKER_HUB_USERNAME }}/go:${{ github.run_number }}

  deploy-gke:
    #needs: build-push
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ${{ secrets.GKE_PROJECT }}
      GKE_CLUSTER: default-cicd-demo-k8s
      GKE_ZONE: us-central1-a

    steps:
    - name: Checkout
      uses: actions/checkout@v3

      # Configure Workload Identity Federation and generate an access token.
     
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'

      # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

      # - name: Configure Service Account
      #   run: |
      #     echo ${{ secrets.GKE_SA_KEY }} | gcloud auth activate-service-account --key-file ${{ secrets.GKE_SA_KEY }}
      #     gcloud config set project ${{ env.GKE_PROJECT }}

      # - name: Configure Kubernetes
      #   run: |
      #     gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --zone ${{ env.GKE_ZONE }} --project ${{ env.GKE_PROJECT }}

    - name: Deploy to GKE
      run: |
        # sed -i "s/TAG/${{ github.run_number }}/g" k8s/go.yaml
        kubectl apply -f k8s/