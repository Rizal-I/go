name: Golang Build, Test, Push to Docker Hub, and Deploy to K8S

on:
  push:
    paths:
      - 'go-boilerplate/**'

defaults:
  run:
    working-directory: go-boilerplate

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      MIGRATION_NAME: test
      DATABASE_URL: postgres://postgres:root@localhost/go_boilerplate?sslmode=disable
      CACHE_URL: redis://localhost:6379
      LOGGER_LEVEL: debug
      CONTEXT_TIMEOUT: 60
      JWT_SECRET_KEY: d7CX75fOIEimIIwFGT309nXfAKNi7QPk

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.x

      - name: Set up PostgreSQL
        run: |
          docker run -d -p 5432:5432 -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=go_boilerplate postgres

      - name: Set up Redis
        run: docker run -d -p 6379:6379 redis

      - name: Install migrate CLI
        run: go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest

      - name: Set up .env file
        run: |
          if [ -f ./.env ]; then
            cp .env .env.github
          fi

      - name: Migration Create
        run: migrate -path migration -database "postgres://postgres:postgres@localhost/go_boilerplate?sslmode=disable" create -ext sql -dir migration -seq ${{ env.MIGRATION_NAME }}

      - name: Migration Up
        run: migrate -path migration -database "postgres://postgres:postgres@localhost/go_boilerplate?sslmode=disable" up

      - name: Migration Down
        run: migrate -path migration -database "postgres://postgres:postgres@localhost/go_boilerplate?sslmode=disable" down --yes

      - name: Run Tests
        run: go test -v ./...

      - name: Generate Mocks
        run: mockery --all

  # build-test-go:
  #   needs: build-and-test
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Setup Go
  #       uses: actions/setup-go@v4
  #       with:
  #         go-version: '1.19.x'
  #     - name: Install dependencies
  #       run: go get .
  #     - name: Build
  #       run: go build -v ./...
  #     - name: Test with the Go CLI
  #       run: go test

  build-push-go:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: go
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/go-boilerplate:${{ github.run_number }}

  deploy-K8S-go:
    needs: build-push-go
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ${{ secrets.GKE_PROJECT }}
      GKE_CLUSTER: apache-flink-cluster-1
      GKE_ZONE: us-central1-c

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Configure SA.
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'

    # Get the k8s credentials so we can deploy to the cluster
    - name: Set up k8s credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    - name: Deploy Go App to k8s
      run: |
        sed -i "s/TAG/${{ github.run_number }}/g" k8s/go-deployment.yaml
        kubectl apply -f k8s/
