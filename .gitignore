# If you prefer the allow list template instead of the deny list, see community template:
# https://github.com/github/gitignore/blob/main/community/Golang/Go.AllowList.gitignore
#
# Binaries for programs and plugins
go-boilerplate/*.exe
go-boilerplate/*.exe~
go-boilerplate/*.dll
go-boilerplate/*.so
go-boilerplate/*.dylib

# Test binary, built with `go test -c`
go-boilerplate/*.test

# Output of the go coverage tool, specifically when used with LiteIDE
go-boilerplate/*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
go-boilerplate/go.work

# Logs
hackathon-starter/logs
hackathon-starter/*.log
hackathon-starter/npm-debug.log*
hackathon-starter/yarn-debug.log*
hackathon-starter/yarn-error.log*
hackathon-starter/lerna-debug.log*
hackathon-starter/.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
hackathon-starter/report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
hackathon-starter/pids
hackathon-starter/*.pid
hackathon-starter/*.seed
hackathon-starter/*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
hackathon-starter/lib-cov

# Coverage directory used by tools like istanbul
hackathon-starter/coverage
hackathon-starter/*.lcov

# nyc test coverage
hackathon-starter/.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
hackathon-starter/.grunt

# Bower dependency directory (https://bower.io/)
hackathon-starter/bower_components

# node-waf configuration
hackathon-starter/.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
hackathon-starter/build/Release

# Dependency directories
hackathon-starter/node_modules/
hackathon-starter/jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
hackathon-starter/web_modules/

# TypeScript cache
hackathon-starter/*.tsbuildinfo

# Optional npm cache directory
hackathon-starter/.npm

# Optional eslint cache
hackathon-starter/.eslintcache

# Optional stylelint cache
hackathon-starter/.stylelintcache

# Microbundle cache
hackathon-starter/.rpt2_cache/
hackathon-starter/.rts2_cache_cjs/
hackathon-starter/.rts2_cache_es/
hackathon-starter/.rts2_cache_umd/

# Optional REPL history
hackathon-starter/.node_repl_history

# Output of 'npm pack'
hackathon-starter/*.tgz

# Yarn Integrity file
hackathon-starter/.yarn-integrity

# dotenv environment variable files
hackathon-starter/.env
hackathon-starter/.env.development.local
hackathon-starter/.env.test.local
hackathon-starter/.env.production.local
hackathon-starter/.env.local

# parcel-bundler cache (https://parceljs.org/)
hackathon-starter/.cache
hackathon-starter/.parcel-cache

# Next.js build output
hackathon-starter/.next
hackathon-starter/out

# Nuxt.js build / generate output
hackathon-starter/.nuxt
hackathon-starter/dist

# Gatsby files
hackathon-starter/.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
hackathon-starter/.vuepress/dist

# vuepress v2.x temp and cache directory
hackathon-starter/.temp
hackathon-starter/.cache

# Docusaurus cache and generated files
hackathon-starter/.docusaurus

# Serverless directories
hackathon-starter/.serverless/

# FuseBox cache
hackathon-starter/.fusebox/

# DynamoDB Local files
hackathon-starter/.dynamodb/

# TernJS port file
hackathon-starter/.tern-port

# Stores VSCode versions used for testing VSCode extensions
hackathon-starter/.vscode-test

# yarn v2
hackathon-starter/.yarn/cache
hackathon-starter/.yarn/unplugged
hackathon-starter/.yarn/build-state.yml
hackathon-starter/.yarn/install-state.gz
hackathon-starter/.pnp.*
